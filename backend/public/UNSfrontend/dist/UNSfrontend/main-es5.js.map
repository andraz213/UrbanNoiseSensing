{"version":3,"sources":["webpack:///src/app/components/finished-deployment/finished-deployment.component.ts","webpack:///src/app/components/finished-deployment/finished-deployment.component.html","webpack:///src/app/services/sensor.service.ts","webpack:///src/app/models/data-deployment.ts","webpack:///src/app/components/edit-deployment/edit-deployment.component.ts","webpack:///src/app/components/edit-deployment/edit-deployment.component.html","webpack:///src/app/components/delete-deployment/delete-deployment.component.ts","webpack:///src/app/components/delete-deployment/delete-deployment.component.html","webpack:///src/app/components/create-deployment/create-deployment.component.ts","webpack:///src/app/components/create-deployment/create-deployment.component.html","webpack:///src/app/components/review-deployment/review-deployment.component.ts","webpack:///src/app/components/review-deployment/review-deployment.component.html","webpack:///src/app/components/sensors/sensors.component.ts","webpack:///src/app/components/sensors/sensors.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/average-chart/average-chart.component.ts","webpack:///src/app/components/average-chart/average-chart.component.html","webpack:///src/app/components/deployment-sensor/deployment-sensor.component.ts","webpack:///src/app/components/deployment-sensor/deployment-sensor.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/deployment.service.ts","webpack:///src/app/components/deployment-overview/deployment-overview.component.ts","webpack:///src/app/components/deployment-overview/deployment-overview.component.html","webpack:///src/app/components/deployments/deployments.component.ts","webpack:///src/app/components/deployments/deployments.component.html","webpack:///src/app/components/sensor-map/sensor-map.component.ts","webpack:///src/app/components/sensor-map/sensor-map.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/deployment-data/deployment-data.component.ts","webpack:///src/app/components/deployment-data/deployment-data.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/deployment-gateway/deployment-gateway.component.ts","webpack:///src/app/components/deployment-gateway/deployment-gateway.component.html","webpack:///src/app/components/senosr-map/senosr-map.component.ts","webpack:///src/app/components/senosr-map/senosr-map.component.html","webpack:///src/app/components/deployment-statistics/deployment-statistics.component.ts","webpack:///src/app/components/deployment-statistics/deployment-statistics.component.html","webpack:///src/app/services/gateway.service.ts","webpack:///src/app/components/explore-moments/explore-moments.component.ts","webpack:///src/app/components/explore-moments/explore-moments.component.html","webpack:///src/app/components/gateways/gateways.component.ts","webpack:///src/app/components/gateways/gateways.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["FinishedDeploymentComponent","deploymentService","sensorService","gatewayService","activatedRoute","id","snapshot","paramMap","get","getDeployment","getOneDeployment","then","res","deployment","console","log","selector","templateUrl","styleUrls","SensorService","http","apiUrl","url","toPromise","answer","obdelajNapako","body","put","napaka","error","sporoƒçilo","errmsg","Promise","reject","providedIn","DataDeployment","EditDeploymentComponent","modalService","router","wifis","mapType","markers","wifiCredentials","getSensors","getGateways","result","sorted","sort","a","b","getTime","last_telemetry","sensors","sn","current_deployment","push","sensor","chosen","latitude","longitude","alpha","date","valueOf","not_ok","ok","errorMessages","gw_num","gateways","gw","sn_num","name","status","length","modalRef","show","hide","gateway","done","data_dep","location","sensor_id","_id","jsn_wifi","wifi_credentials","JSON","stringify","mac","updateDeployment","deployDeployment","data","updateGateway","navigateToReview","navigateByUrl","ssid","password","depDTO","lat","lng","coordType","Math","max","map","marker","min","event","addMarker","saveChangesForm","openModal","DeleteDeploymentComponent","deleteDeployment","decline","confirm","CreateDeploymentComponent","ReviewDeploymentComponent","openTab","SensorsComponent","environment","production","mapsKey","HomeComponent","AverageChartComponent","dataservice","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","colorScheme","domain","getAverages","getAverageDeployment","temp_data","ticks","dd","one","Date","time","toLocaleTimeString","average","average_data","scrHeight","window","innerHeight","scrWidth","innerWidth","parse","onSelect","onActivate","onDeactivate","getScreenSize","DeploymentSensorComponent","number_agregate","num","sen","getOneSensor","reses","measurements","findnumber","current_location","DataService","DeploymentService","post","interval","DeploymentOverviewComponent","measurement_interval","bad_interval","updated_interval","updateDeploymentInterval","finishDeployment","navigateBack","DeploymentsComponent","creating","newdep","getDeployments","deployments","createDeployment","unshift","navigateToEdit","SensorMapComponent","AppComponent","title","DeploymentDataComponent","AppModule","forRoot","apiKey","declarations","imports","providers","bootstrap","DeploymentGatewayComponent","getOneGateway","SenosrMapComponent","DeploymentStatisticsComponent","GatewayService","ExploreMomentsComponent","GatewaysComponent","routes","path","component","children","redirectTo","AppRoutingModule","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-finished-deployment',\n  templateUrl: './finished-deployment.component.html',\n  styleUrls: ['./finished-deployment.component.css']\n})\nexport class FinishedDeploymentComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute) { }\n\n  public deployment: Deployment;\n  public id:string;\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    this.getDeployment();\n  }\n\n  private getDeployment(){\n    this.deploymentService.getOneDeployment(this.id).then((res) => {\n      this.deployment = res;\n      console.log(res);\n\n    });\n  }\n\n}\n","<div *ngIf=\"deployment\">\n  <h2 class=\"mt-5 ml-5 mb-3\">{{deployment.name}}</h2>\n</div>\n\n<div class=\"mt-3 ml-5 mb-2\" *ngIf=\"deployment.description\">\n  <small>Description: </small>\n  <p>{{deployment.description}}</p>\n</div>\n<div class=\"m-2 mt-5\">\n  <div class=\"deployment-div\">\n    <div *ngIf=\"deployment\" class=\"m-3 mb-3 ml-0 pl-0 \">\n      <app-sensor-map [deployment]=\"deployment\" [id]=\"id\"></app-sensor-map>\n    </div>\n  </div>\n</div>\n\n<div class=\"m-2 mt-4\">\n  <div class=\"deployment-div\">\n\n\n    <div *ngIf=\"deployment\">\n\n      <div>\n        <div class=\"row\">\n\n          <div class=\"col-12 m-3\">\n\n            <div class=\"row mt-3 mr-3\">\n\n              <div *ngFor=\"let num of deployment.number_agregate\" class=\"col-xl-3 col-lg-6 col-sm-6 m-0\">\n\n                <div class=\"sensor-div mb-4\">\n                  <div class=\"row m-3\">\n                    <div class=\"col-12\">\n                      <h4>{{num.name}}</h4>\n                    </div>\n                    <div class=\"col-12\">\n\n                      <div *ngIf=\"num.num\">\n                        <small>Number of measurements: </small>\n                        <p class=\"sensor-spec\">{{num.num}}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n\n            <div class=\"row mr-2\">\n              <div class=\"col-12 mr-4\">\n\n                <div class=\"deployment-div pr-5 mr-2\">\n                  <app-average-chart [id]=\"id\"></app-average-chart>\n                </div>\n\n              </div>\n\n            </div>\n\n\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mt-3\">\n    <app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Sensor } from '../models/sensor';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SensorService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, ) { }\n\n  public getSensors(): Promise<Sensor[]>{\n    console.log(this.apiUrl);\n    const url = `${this.apiUrl}/sensor`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Sensor[])\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneSensor(id: string): Promise<Sensor>{\n    const url = `${this.apiUrl}/sensor/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Sensor)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateSensor(id: string, body: string): Promise<Sensor[]>{\n    const url = `${this.apiUrl}/sensor/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Sensor[])\n      .catch(this.obdelajNapako);\n  }\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n  }\n\n}\n","export class DataDeployment {\n    sensor_id: string;\n    location: number[];\n    delivered: boolean;\n    mac: number[];\n}\n","import {Component, OnInit, TemplateRef} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {Gateway} from \"../../models/gateway\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {DataDeployment} from \"../../models/data-deployment\";\n\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-edit-deployment',\n  templateUrl: './edit-deployment.component.html',\n  styleUrls: ['./edit-deployment.component.css']\n})\nexport class EditDeploymentComponent implements OnInit {\n\n\n  constructor(private modalService: BsModalService,\n              private activatedRoute: ActivatedRoute,\n              private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private router: Router) {\n  }\n\n  public errorMessages: string[];\n  public depDTO: Deployment;\n  public sensors: { sensor: Sensor, chosen: boolean, latitude: number, longitude: number, alpha: number }[];\n  public gateways: { gateway: Gateway, chosen: boolean,}[];\n  public deployment: Deployment;\n  public id: string;\n  modalRef: BsModalRef;\n\n  public wifis = {\"ssid\": \"\", \"password\": \"\"};\n\n  public wifiCredentials: { ssid: string, password: string}[];\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    console.log(this.id);\n    this.wifiCredentials = [];\n    this.getDeployment();\n    this.getSensors();\n    this.getGateways();\n  }\n\n  private getSensors() {\n    this.sensorService.getSensors().then(result => {\n      console.log(result);\n      let sorted =  result.sort((a, b) => this.getTime(b.last_telemetry) - this.getTime(a.last_telemetry));\n      console.log(result);\n      console.log(sorted);\n      this.sensors = [];\n      for (let sn of result) {\n        if (!sn.current_deployment || sn.current_deployment == '') {\n          this.sensors.push({sensor: sn, chosen: false, latitude: 0, longitude: 0, alpha: 0});\n        }\n      }\n      console.log(this.sensors);\n    });\n  }\n\n  private getTime(date?: Date) {\n    console.log( date != null ? date.valueOf() : 0);\n    return date != null ? date.valueOf() : 0;\n  }\n\n  openModal(not_ok: TemplateRef<any>, ok: TemplateRef<any>) {\n    this.errorMessages = [];\n\n    let gw_num = 0;\n    for(let gw of this.gateways){\n      if(gw.chosen == true){\n        gw_num++;\n      }\n    }\n    if(gw_num < 1){\n      this.errorMessages.push(\"You don't have any gateways selected!\");\n    }\n\n    let sn_num = 0;\n    for(let sn of this.sensors){\n      if(sn.chosen == true){\n        sn_num++;\n      }\n    }\n    if(sn_num < 1){\n      this.errorMessages.push(\"Place at least one sensor!\");\n    }\n\n    if(!this.deployment.name || this.deployment.name == ''){\n      this.errorMessages.push(\"Save the name of this deployment!\");\n    }\n\n    if(this.deployment.status != 'pending'){\n        this.errorMessages.push(\"Something went wrong with your deployment. Is it already deployed?\");\n    }\n\n    if(this.errorMessages.length != 0) {\n      this.modalRef = this.modalService.show(not_ok, {class: 'modal-sm'});\n    } else {\n\n      this.modalRef = this.modalService.show(ok, {class: 'modal-sm'});\n    }\n\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n  private getGateways() {\n    this.gateways = [];\n    this.gatewayService.getGateways().then(result => {\n      console.log(result);\n      this.gateways = [];\n      for (let gw of result) {\n        if (!gw.current_deployment || gw.current_deployment == '') {\n          this.gateways.push({gateway: gw, chosen: false});\n        }\n      }\n      console.log(this.sensors);\n    });\n  }\n\n\n  public deployDeployment(done: TemplateRef<any>, error: TemplateRef<any>){\n    this.errorMessages = [];\n    for(let sn of this.sensors){\n      if(sn.chosen == true){\n        let data_dep = new DataDeployment();\n        data_dep.location = [sn.latitude, sn.longitude];\n        data_dep.sensor_id = sn.sensor._id;\n        this.deployment.sensors.push(data_dep);\n      }\n    }\n\n    let jsn_wifi = {wifi_credentials: []};\n\n    jsn_wifi[\"wifi_credentials\"] = [this.wifis[\"ssid\"], this.wifis[\"password\"]];\n    console.log(JSON.stringify((jsn_wifi)));\n\n    for(let gw of this.gateways){\n      if(gw.chosen == true){\n        let data_dep = new DataDeployment();\n        data_dep.sensor_id = gw.gateway._id;\n        data_dep.location = [0, 0];\n        data_dep.mac = gw.gateway.mac;\n        this.deployment.gateways.push(data_dep);\n      }\n      // this.gatewayService.updateGateway(gw.gateway._id, JSON.stringify(jsn_wifi));\n    }\n\n    this.deploymentService.updateDeployment(this.deployment._id, this.deployment).then(res => {\n      console.log(res);\n      this.getDeployment();\n\n      this.deploymentService.deployDeployment(this.deployment._id).then((data) =>{\n\n        for(let gw of this.gateways){\n          if(gw.chosen == true) {\n            this.gatewayService.updateGateway(gw.gateway._id, jsn_wifi);\n          }\n        }\n\n        console.log(data);\n        this.modalRef.hide();\n        this.navigateToReview(this.deployment._id);\n\n        //this.errorMessages.push(res.message);\n      });\n    });\n  }\n\n\n  public navigateToReview(id:string){\n    this.router.navigateByUrl(`reviewdeployment/${id}`);\n  }\n\n\n\n  public addGatewayToDeploy(id:string){\n    for(let gw of this.gateways){\n      if(gw.gateway._id == id){\n        gw.chosen = !gw.chosen;\n      }\n    }\n  }\n\n  public addWifiCredentials(){\n    this.wifiCredentials.push({ssid: \"\", password: \"\"});\n  }\n\n\n  private getDeployment() {\n    this.deploymentService.getOneDeployment(this.id).then(result => {\n      this.deployment = result;\n      this.depDTO = result;\n      console.log(this.deployment);\n      if(this.deployment.status == 'deployed'){\n        this.router.navigateByUrl(`reviewdeployment/${this.deployment._id}`);\n      }\n    })\n\n  }\n\n  public discardChanges() {\n    this.getDeployment();\n  }\n\n  public saveChangesForm() {\n    this.deploymentService.updateDeployment(this.deployment._id, this.depDTO).then(res => {\n      console.log(res);\n      this.getDeployment();\n    });\n\n  }\n\n\n  public addSensorToDeploy(id: string) {\n\n  }\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      if (sn.chosen) {\n        sn.alpha = 0.4;\n      }\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n\n  mapType = 'hybrid';\n  selectedMarker;\n  markers = [];\n\n  addMarker(lat: number, lng: number) {\n    for (let sn of this.sensors) {\n      if (sn.chosen == false) {\n        sn.chosen = true;\n        sn.longitude = lng;\n        sn.latitude = lat;\n        sn.alpha = 0.4;\n        return;\n      }\n    }\n    //this.markers.push({ lat, lng, alpha: 0.4 });\n  }\n\n  max(coordType: 'lat' | 'lng'): number {\n    return Math.max(...this.markers.map(marker => marker[coordType]));\n  }\n\n  min(coordType: 'lat' | 'lng'): number {\n    return Math.min(...this.markers.map(marker => marker[coordType]));\n  }\n\n  removeSensor(event) {\n    console.log(event);\n    for (let sn of this.sensors) {\n      if (sn.longitude == event.longitude && sn.latitude == event.latitude) {\n        sn.chosen = false;\n        sn.alpha = 0;\n        return;\n      }\n    }\n  }\n\n  selectMarker(event) {\n    console.log(event);\n    for (let sn of this.sensors) {\n      if (sn.longitude == event.longitude && sn.latitude == event.latitude && sn.chosen == true) {\n        sn.chosen = false;\n        sn.alpha = 0;\n        return;\n      }\n    }\n  }\n}\n","<div *ngIf=\"deployment\">\n  <h2 class=\"m-5\">{{deployment.name}}</h2>\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <form (submit)=\"saveChangesForm()\">\n        <div class=\"form-group\">\n          <label for=\"deploymentName\">Deployment name</label>\n          <input [(ngModel)]=\"depDTO.name\" name=\"name\" type=\"text\" class=\"form-control\" id=\"deploymentName\"\n                 placeholder=\"Enter deployment name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"deploymentDescription\">Deployment description</label>\n          <input [(ngModel)]=\"depDTO.description\" name=\"deploymentDescription\" type=\"textarea\" class=\"form-control\"\n                 id=\"deploymentDescription\" placeholder=\"Enter deployment description\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mr-4\">Save Changes</button>\n        <button (click)=\"discardChanges()\" class=\"btn btn-danger\">Discard Changes</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n<div class=\"deployment-div m-3\">\n  <div class=\"m-3\">\n    <h4>Sensors</h4>\n    <small>To place a sensor: <br>1. Click on the map to place a marker <br> 2. Click on the marker to remove it <br> 3.\n      Click on senor name to show its position</small>\n    <div class=\"m-3\">\n      <p>Free sensors</p>\n      <div class=\"row\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\" *ngIf=\"sn.chosen == false\">\n            <button type=\"button\" (click)=\"addSensorToDeploy(sn.sensor._id)\" class=\"btn btn-outline-dark\"\n                    disabled>{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"m-3\">\n      <p>Placed sensors</p>\n      <div class=\"row\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\" *ngIf=\"sn.chosen == true\">\n            <button type=\"button\" (click)=\"showLocation(sn.sensor._id)\"\n                    class=\"btn btn-outline-success\">{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <agm-map\n      [latitude]=\"46.04840798323542\"\n      [longitude]=\"14.506113341719598\"\n      [zoom]=\"13\"\n      (mapClick)=\"addMarker($event.coords.lat, $event.coords.lng)\"\n      [mapTypeId]='mapType'\n    >\n      <agm-marker\n        *ngFor=\"let sn of sensors\"\n        [latitude]=\"sn.latitude\"\n        [longitude]=\"sn.longitude\"\n        [opacity]=\"sn.alpha\"\n        [markerDraggable]=\"false\"\n        (markerClick)=\"removeSensor($event)\"\n      >\n      </agm-marker>\n    </agm-map>\n    <p *ngIf=\"selectedMarker\">\n      Lat: {{ selectedMarker.lat }} Lng: {{ selectedMarker.lng }}\n    </p>\n  </div>\n</div>\n\n\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <h4>Gateways</h4>\n      <small>Select the gateways by clicking on them. <br>Unselect the gateways in similar fashion. <br>Gateway location\n        is\n        not saved. Please remember it or write it down in deployment description. </small>\n      <div *ngIf=\"gateways.length > 0\">\n        <p>Free gateways</p>\n        <div class=\"row\">\n          <div *ngFor=\"let gw of gateways\">\n            <div class=\"col-1\" *ngIf=\"gw.chosen == false\">\n              <button type=\"button\" (click)=\"addGatewayToDeploy(gw.gateway._id)\"\n                      class=\"btn btn-outline-primary\">{{gw.gateway.name}}</button>\n            </div>\n          </div>\n        </div>\n\n\n        <p>Selected gateways</p>\n        <div class=\"row\">\n          <div *ngFor=\"let gw of gateways\">\n            <div class=\"col-1\" *ngIf=\"gw.chosen == true\">\n              <button type=\"button\" (click)=\"addGatewayToDeploy(gw.gateway._id)\"\n                      class=\"btn btn-outline-success\">{{gw.gateway.name}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <p>Gateway WiFi credentials</p>\n\n        <form (submit)=\"saveChangesForm()\">\n\n          <div class=\"form-group\">\n            <label for=\"ssid\">WiFi SSID</label>\n            <input [(ngModel)]=\"wifis.ssid\" name=\"name\" type=\"text\" class=\"form-control\" id=\"ssid\"\n                   placeholder=\"Enter WiFi SSID\">\n          </div>\n\n\n          <div class=\"form-group\">\n            <label for=\"deploymentDescription\">WiFi password</label>\n            <input [(ngModel)]=\"wifis.password\" name=\"deploymentDescription\" type=\"textarea\" class=\"form-control\"\n                   id=\"password\" placeholder=\"Enter WiFi password\">\n            </div>\n        </form>\n\n\n      <div *ngIf=\"gateways.length == 0\">\n        <p>No free gateways currently availale.</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <h4>NOTE: Once the deployment is deployed, it cannot be changed!!!</h4>\n      <button type=\"button\" (click)=\"openModal(not_ok, ok)\" class=\"btn btn-outline-danger\">DEPLOY</button>\n    </div>\n  </div>\n<div class=\"m-3 mt-0\">\n<app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n</div>\n  <ng-template #not_ok>\n    <div class=\"modal-body text-center bg-custom\">\n      <div *ngFor=\"let err of errorMessages\">\n        <p>{{err}}</p>\n      </div>\n      <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n    </div>\n  </ng-template>\n\n  <ng-template #ok>\n    <div class=\"modal-body text-center bg-custom\">\n      <p>You are about to deploy this deployment.</p>\n      <button type=\"button\" class=\"btn btn-outline-primary m-1 \" (click)=\"deployDeployment(done, error)\">Deploy</button>\n      <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n    </div>\n  </ng-template>\n\n<ng-template #done>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Deployment was successfully deployed!</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n\n<ng-template #error>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Error</p>\n\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\nimport {Router} from \"@angular/router\";\nimport {Deployment} from \"../../models/deployment\";\n\n@Component({\n  selector: 'app-delete-deployment',\n  templateUrl: './delete-deployment.component.html',\n  styleUrls: ['./delete-deployment.component.css']\n})\nexport class DeleteDeploymentComponent implements OnInit {\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n\n  constructor(private deploymentService: DeploymentService,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  modalRef: BsModalRef;\n\n\n  public deleteDeployment(){\n    this.deploymentService.deleteDeployment(this.deployment._id).then(res =>{\n      this.decline();\n      console.log(res);\n      this.router.navigateByUrl(`deployments`);\n\n    });\n    this.decline();\n    this.router.navigateByUrl(`deployments`);\n  }\n\n\n  public decline(): void {\n    this.modalRef.hide();\n  }\n\n\n  public openModal(confirm: TemplateRef<any>) {\n\n    this.modalRef = this.modalService.show(confirm, {class: 'modal-sm'});\n\n  }\n\n}\n","\n<div class=\"deployment-div mt-4\">\n  <div class=\"m-4\">\n    <h4>Delete deployment and all data</h4>\n    <button type=\"button\" (click)=\"openModal(deletion)\" class=\"btn btn-outline-danger m-2\">DELETE DEPLOYMENT</button>\n  </div>\n</div>\n\n<ng-template #deletion>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>You are about to delete this deployment.</p>\n    <button type=\"button\" class=\"btn btn-outline-danger m-1 \" (click)=\"deleteDeployment()\">DELETE</button>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-deployment',\n  templateUrl: './create-deployment.component.html',\n  styleUrls: ['./create-deployment.component.css']\n})\nexport class CreateDeploymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>create-deployment works!</p>\n","import {Component, OnInit, TemplateRef} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Deployment} from \"../../models/deployment\";\r\nimport {Sensor} from \"../../models/sensor\";\r\nimport {Gateway} from \"../../models/gateway\";\r\nimport {SensorService} from \"../../services/sensor.service\";\r\nimport {DeploymentService} from \"../../services/deployment.service\";\r\nimport {GatewayService} from \"../../services/gateway.service\";\r\n\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-review-deployment',\r\n  templateUrl: './review-deployment.component.html',\r\n  styleUrls: ['./review-deployment.component.css']\r\n})\r\nexport class ReviewDeploymentComponent implements OnInit {\r\n\r\n  constructor(private deploymentService: DeploymentService,\r\n              private sensorService: SensorService,\r\n              private gatewayService: GatewayService,\r\n              private activatedRoute: ActivatedRoute) { }\r\n\r\n\r\n  public deployment: Deployment;\r\n  public id:string;\r\n  modalRef: BsModalRef;\r\n\r\n  public openTab = \"overview\";\r\n\r\n\r\n  ngOnInit() {\r\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\r\n    this.getDeployment();\r\n  }\r\n\r\n  private getDeployment(){\r\n    this.deploymentService.getOneDeployment(this.id).then((res) => {\r\n      this.deployment = res;\r\n      console.log(res);\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public switchTab(name: string){\r\n    this.openTab = name;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"deployment\">\r\n  <h2 class=\"mt-5 ml-5 mb-3\">{{deployment.name}}</h2>\r\n  <p class=\"ml-5 mb-5\">{{deployment.description}}</p>\r\n\r\n  </div>\r\n<div class=\"m-3\">\r\n<ul class=\"nav nav-tabs\">\r\n\r\n  <div *ngIf=\"openTab != 'overview'\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" (click)=\"switchTab('overview')\">Overview</a>\r\n  </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'overview'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('overview')\">Overview</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'sensors'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('sensors')\">Sensors</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'sensors'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('sensors')\">Sensors</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'gateways'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('gateways')\">Gateways</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'gateways'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('gateways')\">Gateways</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'data'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('data')\">Data</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'data'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('data')\">Data</a>\r\n    </li>\r\n  </div>\r\n\r\n</ul>\r\n</div>\r\n\r\n<div *ngIf=\"deployment\">\r\n<div *ngIf=\"openTab == 'sensors'\">\r\n  <app-deployment-sensor [deployment]=\"deployment\" [id]=\"id\"></app-deployment-sensor>\r\n</div>\r\n\r\n<div *ngIf=\"openTab == 'gateways'\">\r\n  <app-deployment-gateway [deployment]=\"deployment\" [id]=\"id\"></app-deployment-gateway>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"openTab == 'overview'\">\r\n  <app-deployment-overview [deployment]=\"deployment\" [id]=\"id\"></app-deployment-overview>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { SensorService } from \"../../services/sensor.service\";\nimport { Sensor} from \"../../models/sensor\";\n\n@Component({\n  selector: 'app-sensors',\n  templateUrl: './sensors.component.html',\n  styleUrls: ['./sensors.component.css']\n})\nexport class SensorsComponent implements OnInit {\n\n\n  constructor(\n    private sensorService: SensorService\n  ) { }\n\n  public sensors: Sensor[];\n\n  ngOnInit() {\n    this.getSensors();\n    console.log(\"hej\");\n    console.log(this.sensorService);\n  }\n\n  private getSensors(){\n    this.sensorService.getSensors().then(result => {\n      console.log(result);\n      this.sensors = result;\n    });\n\n  }\n\n\n\n}\n","<h2 class=\"m-4 mt-5\">Sensors</h2>\n<div class=\"row mb-4 mx-1\">\n\n  <div *ngFor=\"let sensori of sensors\" class=\"col-xl-6 col-lg-12 col-sm-12 m-0\">\n\n      <div class=\"sensor-div mb-4\">\n        <div class=\"row m-3\">\n          <div class=\"col-12\">\n            <h3>{{sensori.name}}</h3>\n          </div>\n          <div class=\"col-12\">\n            <div *ngIf=\"sensori.battery_voltage\">\n            <small>Battery voltage: </small>\n            <p class=\"sensor-spec\">{{sensori.battery_voltage | number : '.2-2'}} V</p>\n            </div>\n\n            <div *ngIf=\"sensori.firmware_version\">\n              <small>Firmware version: </small>\n              <p class=\"sensor-spec\">{{sensori.firmware_version}} V</p>\n            </div>\n\n            <div *ngIf=\"sensori.current_deployment\">\n            <small>Deployment: </small>\n            <p class=\"sensor-spec\">{{sensori.current_deployment}}</p>\n            <small>Location: </small>\n            <p class=\"sensor-spec\">{{sensori.current_location[0].toFixed(3)}}, {{sensori.current_location[1].toFixed(3)}}</p>\n            </div>\n          </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://urbannoisesensing.biolab.si/api\",\n  //apiUrl: \"http://localhost:3000/api\",\n  mapsKey: \"AIzaSyA9amYWGlkh7IzlVQIlZr4YIjHsWU1fHlA\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!---\r\n<div class=\"row mt-5\">\r\n  <div class=\"col-2\"></div>\r\n  <div class=\"col-8\">\r\n    <ul class=\"nav nav-pills nav-fill\">\r\n      <li class=\"nav-item\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/deployments\">Deployments</a>\r\n          </button>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/sensors\">Sensors</a>\r\n        </button>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/gateways\">Gateways</a>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n\r\n  </div>\r\n</div>\r\n--->\r\n\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-xl-1 col-lg-1\"></div>\r\n    <div class=\"col-sm-12 col-xl-10 col-lg-10\">\r\n      <a class=\"navbar-brand\" href=\"#\">Urban Noise Sensing Platform</a>\r\n    </div>\r\n  </div>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/deployments\">Deployments</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/sensors\">Sensors</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/gateways\">Gateways</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n</nav>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12 col-xl-2 col-lg-1\"></div>\r\n  <div class=\"col-sm-12 col-xl-8 col-lg-10\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div class=\"col-sm-12 col-xl-2 col-lg-1\"></div>\r\n</div>\r\n","import {Component, HostListener, Input, OnInit} from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-average-chart',\n  templateUrl: './average-chart.component.html',\n  styleUrls: ['./average-chart.component.css']\n})\nexport class AverageChartComponent implements OnInit {\n\n  @Input() id: string;\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = '';\n  yAxisLabel: string = 'Average decibels';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n\n  average_data:[any];\n\n  constructor(private dataservice: DataService) { }\n\n  ngOnInit(): void {\n    this.getAverages();\n  }\n\n\n  private getAverages(){\n\n    this.dataservice.getAverageDeployment(this.id).then(data =>{\n      let temp_data = {};\n      temp_data[\"name\"] = \"averages\";\n      temp_data[\"series\"] = [];\n      let ticks = [];\n\n      for(let dd of data){\n        let one = {};\n        one[\"name\"] = (new Date(dd.time)).toLocaleTimeString();\n        one[\"value\"] = dd.average;\n        temp_data[\"series\"].push(one);\n\n      }\n\n      this.average_data = [temp_data];\n      console.log(this.average_data);\n    });\n  }\n\n  scrHeight:any;\n  scrWidth:any;\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.scrHeight = window.innerHeight;\n    this.scrWidth = window.innerWidth;\n    console.log(window);\n    console.log(this.scrHeight, this.scrWidth);\n  }\n\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12 py-5\">\n    <ngx-charts-line-chart\n      [scheme]=\"colorScheme\"\n\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxis]=\"xAxis\"\n      [yAxis]=\"yAxis\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [timeline]=\"timeline\"\n      [results]=\"average_data\"\n      [autoScale]=true\n      [gradient]=true\n      [maxXAxisTickLength]=100\n      (select)=\"onSelect($event)\"\n      (activate)=\"onActivate($event)\"\n      (deactivate)=\"onDeactivate($event)\"\n    >\n    </ngx-charts-line-chart>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\n\n@Component({\n  selector: 'app-deployment-sensor',\n  templateUrl: './deployment-sensor.component.html',\n  styleUrls: ['./deployment-sensor.component.css']\n})\nexport class DeploymentSensorComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  public mapType = \"hybrid\";\n  public longitude = 0;\n  public latitude = 0;\n  public sensors: {sensor: Sensor, alpha:number, measurements:number}[];\n\n  ngOnInit() {\n\n    this.getSensors();\n\n\n  }\n\n\n  private findnumber(id: String){\n    for(let sn of this.deployment.number_agregate){\n      if(sn.sensor == id){\n        return(sn.num);\n      }\n\n    }\n    return 0;\n\n  }\n\n  private getSensors(){\n    this.sensors = [];\n    for(let sen of this.deployment.sensors) {\n      this.sensorService.getOneSensor(sen.sensor_id).then((reses) => {\n        console.log(reses);\n        let res = reses[0];\n        this.sensors.push({sensor: res, alpha: 0.4, measurements: this.findnumber(sen.sensor_id)});\n        this.longitude += res.current_location[0] / this.deployment.sensors.length;\n        // @ts-ignore\n        this.latitude += res.current_location[1] / this.deployment.sensors.length;\n        console.log(res);\n      });\n    }\n    console.log(this.deployment);\n    console.log(this.sensors);\n    console.log(this.longitude);\n    console.log(this.latitude);\n  }\n\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      sn.alpha = 0.4;\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n\n\n}\n","<div class=\"deployment-div m-3\">\n  <div class=\"m-2\">\n\n\n    <div class=\"m-3\">\n      <h4>Sensors</h4>\n      <p>Placed sensors</p>\n\n      <div class=\"row mb-4\">\n\n        <div *ngFor=\"let sensori of sensors\" class=\"col-xl-3 col-lg-6 col-sm-12 m-0\">\n\n          <div class=\"sensor-div mb-4\">\n            <div class=\"row m-3\">\n              <div class=\"col-12\">\n                <h3>{{sensori.sensor.name}}</h3>\n              </div>\n              <div class=\"col-12\">\n\n                <div *ngIf=\"sensori.sensor.latest_measurement\">\n                  <small>Latest decibels: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.latest_measurement.decibels | number : '.2-2'}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.measurements\">\n                  <small>Number of measurements: </small>\n                  <p class=\"sensor-spec\">{{sensori.measurements}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.last_telemetry\">\n                  <small>Last telemetry: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.last_telemetry | date:'short'}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.battery_voltage\">\n                  <small>Battery voltage: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.battery_voltage | number : '.2-2'}} V</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.firmware_version\">\n                  <small>Firmware version: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.firmware_version}}</p>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div class=\"row\" *ngIf=\"sensors\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\">\n            <button type=\"button\" (click)=\"showLocation(sn.sensor._id)\"\n                    class=\"btn btn-outline-success\">{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"sensors\" class=\"my-3\">\n        <agm-map\n          [latitude]=\"longitude\"\n          [longitude]=\"latitude\"\n          [zoom]=\"15\"\n          [mapTypeId]='mapType'\n        >\n          <agm-marker\n            *ngFor=\"let sn of sensors\"\n            [latitude]=\"sn.sensor.current_location[0]\"\n            [longitude]=\"sn.sensor.current_location[1]\"\n            [opacity]=\"sn.alpha\"\n            [markerDraggable]=\"false\"\n          >\n          </agm-marker>\n        </agm-map>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Deployment } from '../models/deployment';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient,) { }\n\n\n  public getAverageDeployment(id:string): Promise<any>{\n    const url = `${this.apiUrl}/data/deployment/average/`+ id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n/*\n  public finishDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/finish/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneDeployment(id: string): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n  public deployDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/deploy/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateDeployment(id: string, body: any): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public createDeployment(body: any): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/`;\n    return this.http\n      .post(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n*/\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Deployment } from '../models/deployment';\nimport {environment} from \"../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeploymentService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient,) { }\n\n\n  public getDeployments(): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public finishDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/finish/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneDeployment(id: string): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n  public deployDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/deploy/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateDeployment(id: string, body: any): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public createDeployment(body: any): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/`;\n    return this.http\n      .post(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n\n  public updateDeploymentInterval(id: string, interval:number): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/interval/` + id + '/' + interval;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n\n  public deleteDeployment(id:string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .delete(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n  }\n}\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-deployment-overview',\n  templateUrl: './deployment-overview.component.html',\n  styleUrls: ['./deployment-overview.component.css']\n})\nexport class DeploymentOverviewComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  modalRef: BsModalRef;\n\n  public depDTO: Deployment;\n\n\n\n\n  ngOnInit() {\n    this.depDTO = this.deployment;\n    console.log(this.depDTO.measurement_interval);\n\n  }\n\n  public saveChangesForm(bad_interval: TemplateRef<any>, updated_interval: TemplateRef<any>) {\n    if(this.depDTO.measurement_interval < 1){\n      this.modalRef = this.modalService.show(bad_interval, {class: 'modal-sm'});\n    }else {\n      this.deploymentService.updateDeploymentInterval(this.id, this.depDTO.measurement_interval).then(res => {\n        console.log(res);\n        this.deployment = res;\n        this.modalRef = this.modalService.show(updated_interval, {class: 'modal-sm'});\n      });\n    }\n\n  }\n\n\n\n  public finishDeployment(){\n    this.deploymentService.finishDeployment(this.deployment._id).then((data) =>{\n      console.log(data);\n      this.modalRef.hide();\n      this.navigateBack();\n    });\n\n  }\n\n  public openModal(confirm: TemplateRef<any>) {\n\n    this.modalRef = this.modalService.show(confirm, {class: 'modal-sm'});\n\n  }\n\n  public decline(): void {\n    this.modalRef.hide();\n  }\n\n  public navigateBack(){\n    this.router.navigateByUrl(`deployments`);\n  }\n\n\n}\n","\n\n\n<div class=\"row\">\n  <div class=\"col-12\">\n\n    <div class=\"deployment-div m-3 pr-5\">\n      <app-average-chart [id]=\"id\"></app-average-chart>\n    </div>\n\n  </div>\n\n</div>\n\n\n<div class=\"deployment-div m-3\">\n  <div class=\"m-4\">\n    <h4>Sensing interval</h4>\n\n    <form (submit)=\"saveChangesForm(bad_interval, updated_interval)\">\n      <div class=\"form-group\">\n        <label for=\"measurementInterval\">Measurement interval</label>\n        <input [(ngModel)]=\"depDTO.measurement_interval\" name=\"measurement_interval\" type=\"number\" class=\"form-control\" id=\"measurementInterval\"\n               placeholder=\"Enter deployment name\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mr-4\">Save Changes</button>\n    </form>\n  </div>\n</div>\n\n<div class=\"deployment-div m-3 mt-4\">\n  <div class=\"m-4\">\n    <h4>NOTE: Once the deployment is ended, it cannot be redeployed back!!!</h4>\n    <button type=\"button\" (click)=\"openModal(confirm)\" class=\"btn btn-outline-danger m-2\">FINISH SENSING</button>\n  </div>\n</div>\n\n<div class=\"m-3 mt-4\">\n  <app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n</div>\n\n\n\n<ng-template #confirm>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>You are about to finish this deployment.</p>\n    <button type=\"button\" class=\"btn btn-outline-primary m-1 \" (click)=\"finishDeployment()\">Finish</button>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n  </div>\n</ng-template>\n\n\n\n<ng-template #bad_interval>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Sensing interval must be greater or equal to 1s.</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n\n<ng-template #updated_interval>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Sensing interval was updated.</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Deployment } from \"../../models/deployment\";\nimport { DeploymentService } from \"../../services/deployment.service\";\nimport { DeploymentCreationDTO } from \"../../classes/deployment-creation-dto\"\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-deployments',\n  templateUrl: './deployments.component.html',\n  styleUrls: ['./deployments.component.css']\n})\nexport class DeploymentsComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService, private router: Router) { }\n\n  public deployments: Deployment[];\n  public creating = false;\n\n  public newdep: DeploymentCreationDTO = {name: ''};\n\n  ngOnInit() {\n    this.getDeployments();\n  }\n  private getDeployments(){\n    this.deploymentService.getDeployments().then(result => {\n      this.deployments = result;\n      console.log(result);\n    });\n\n  }\n\n  public switchCreating(){\n      this.creating = !this.creating;\n  }\n\n  public createDeployment(){\n    console.log(\"creating\");\n    console.log(this.newdep.name);\n    this.deploymentService.createDeployment(this.newdep).then(result => {\n      console.log(result);\n      this.newdep.name = '';\n      this.creating = false;\n      this.deployments.unshift(result);\n      this.navigateToEdit(result._id);\n    });\n\n  }\n\n  public navigateToEdit(id:string){\n    this.router.navigateByUrl(`editdeployment/${id}`);\n  }\n\n  public navigateToFinished(id:string){\n    this.router.navigateByUrl(`finisheddeployment/${id}`);\n  }\n\n  public navigateToReview(id:string){\n    this.router.navigateByUrl(`reviewdeployment/${id}`);\n  }\n\n}\n","<h2 class=\"m-4 mt-5\">Deployments</h2>\r\n\r\n<div class=\"row ml-0 mx-1\">\r\n\r\n  <div class=\"col\">\r\n    <div class=\"ml-2 mt-4 mb-4\">\r\n      <div *ngIf=\"creating == false\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"switchCreating()\">+</button>\r\n      </div>\r\n      <div *ngIf=\"creating == true\">\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"switchCreating()\"> -</button>\r\n        <form (submit)=\"createDeployment()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"deploymentName\">Deployment name</label>\r\n            <input [(ngModel)]=\"newdep.name\" name=\"name\" type=\"text\" class=\"form-control\" id=\"deploymentName\"\r\n                   placeholder=\"Enter deployment name\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Create Deloyment</button>\r\n        </form>\r\n\r\n      </div>\r\n      <div *ngIf=\"deployments && deployments.length == 0\">\r\n        <p>There are no deployments yet!</p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <h3>Not yet deployed</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'pending'\">\r\n      <a (click)=\"navigateToEdit(deployment._id)\">\r\n        <div class=\"deployment-div mb-4\">\r\n          <div class=\"row m-3\">\r\n            <div class=\"col-8\">\r\n              <h4>{{deployment.name}}</h4>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <p>{{deployment.description}}</p>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Deployed</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'deployed'\">\r\n        <a (click)=\"navigateToReview(deployment._id)\">\r\n          <div class=\"deployment-div mb-4\">\r\n            <div class=\"row m-3\">\r\n              <div class=\"col-12\">\r\n                <h4>{{deployment.name}}</h4>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <p>{{deployment.description}}</p>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <small>Number of measurements:</small>\r\n                <p>{{deployment.measurement_num}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <h3>Finished</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'finished'\">\r\n        <a (click)=\"navigateToFinished(deployment._id)\">\r\n          <div class=\"deployment-div mb-4\">\r\n            <div class=\"row m-3\">\r\n              <div class=\"col-12\">\r\n                <h4>{{deployment.name}}</h4>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <p>{{deployment.description}}</p>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                  <small>Number of measurements:</small>\r\n                  <p>{{deployment.measurement_num}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\n\n@Component({\n  selector: 'app-sensor-map',\n  templateUrl: './sensor-map.component.html',\n  styleUrls: ['./sensor-map.component.css']\n})\nexport class SensorMapComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  public mapType = \"hybrid\";\n  public longitude = 0;\n  public latitude = 0;\n  public sensors: {sensor: any, alpha:number}[];\n\n  ngOnInit() {\n    console.log(this.deployment);\n    this.getSensors();\n  }\n\n  private getSensors(){\n    this.sensors = [];\n    for(let sen of this.deployment.sensors) {\n\n        this.sensors.push({sensor: sen, alpha: 0.4});\n        this.longitude += sen.location[0] / this.deployment.sensors.length;\n        // @ts-ignore\n        this.latitude += sen.location[1] / this.deployment.sensors.length;\n        console.log(sen);\n      };\n\n    console.log(this.deployment);\n    console.log(this.sensors);\n    console.log(this.longitude);\n    console.log(this.latitude);\n  }\n\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      sn.alpha = 0.4;\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n}\n","<div *ngIf=\"sensors\" class=\"my-3\">\n  <agm-map\n    [latitude]=\"longitude\"\n    [longitude]=\"latitude\"\n    [zoom]=\"15\"\n    [mapTypeId]='mapType'\n  >\n    <agm-marker\n      *ngFor=\"let sn of sensors\"\n      [latitude]=\"sn.sensor.location[0]\"\n      [longitude]=\"sn.sensor.location[1]\"\n      [opacity]=\"sn.alpha\"\n      [markerDraggable]=\"false\"\n    >\n    </agm-marker>\n  </agm-map>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  title = 'UNSfrontend';\n}\n\n\n","\n<router-outlet></router-outlet>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deployment-data',\n  templateUrl: './deployment-data.component.html',\n  styleUrls: ['./deployment-data.component.css']\n})\nexport class DeploymentDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>deployment-data works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule , HttpHeaders } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SensorsComponent } from './components/sensors/sensors.component';\r\nimport { GatewaysComponent } from './components/gateways/gateways.component';\r\nimport { DeploymentsComponent } from './components/deployments/deployments.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CreateDeploymentComponent } from './components/create-deployment/create-deployment.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { EditDeploymentComponent } from './components/edit-deployment/edit-deployment.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport {environment} from \"../environments/environment\";\r\nimport { SensorMapComponent } from './components/sensor-map/sensor-map.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ReviewDeploymentComponent } from './components/review-deployment/review-deployment.component';\r\nimport { ExploreMomentsComponent } from './components/explore-moments/explore-moments.component';\r\nimport { DeploymentOverviewComponent } from './components/deployment-overview/deployment-overview.component';\r\nimport { DeploymentSensorComponent } from './components/deployment-sensor/deployment-sensor.component';\r\nimport { DeploymentGatewayComponent } from './components/deployment-gateway/deployment-gateway.component';\r\nimport { DeploymentDataComponent } from './components/deployment-data/deployment-data.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { AverageChartComponent } from './components/average-chart/average-chart.component';\nimport { DeleteDeploymentComponent } from './components/delete-deployment/delete-deployment.component';\nimport { FinishedDeploymentComponent } from './components/finished-deployment/finished-deployment.component';\nimport { DeploymentStatisticsComponent } from './components/deployment-statistics/deployment-statistics.component';\nimport { SenosrMapComponent } from './components/senosr-map/senosr-map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SensorsComponent,\r\n    GatewaysComponent,\r\n    DeploymentsComponent,\r\n    HomeComponent,\r\n    CreateDeploymentComponent,\r\n    EditDeploymentComponent,\r\n    SensorMapComponent,\r\n    ReviewDeploymentComponent,\r\n    ExploreMomentsComponent,\r\n    DeploymentOverviewComponent,\r\n    DeploymentSensorComponent,\r\n    DeploymentGatewayComponent,\r\n    DeploymentDataComponent,\r\n    AverageChartComponent,\r\n    DeleteDeploymentComponent,\r\n    FinishedDeploymentComponent,\r\n    DeploymentStatisticsComponent,\r\n    SenosrMapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxChartsModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule.forRoot(),\r\n    FormsModule,\r\n    AgmCoreModule.forRoot({apiKey: environment.mapsKey})\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Gateway} from \"../../models/gateway\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {Deployment} from \"../../models/deployment\";\n\n@Component({\n  selector: 'app-deployment-gateway',\n  templateUrl: './deployment-gateway.component.html',\n  styleUrls: ['./deployment-gateway.component.css']\n})\nexport class DeploymentGatewayComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n\n  public gateways: Gateway[];\n\n  ngOnInit() {\n    this.getGateways()\n  }\n\n\n  private getGateways(){\n    this.gateways = [];\n    for(let gw of this.deployment.gateways){\n      this.gatewayService.getOneGateway(gw.sensor_id).then((res) => {\n        this.gateways.push(res);\n        console.log(res);\n      });\n    }\n  }\n\n}\n","<div class=\"deployment-div m-3\" *ngIf=\"gateways\">\n  <div class=\"m-4\">\n    <h4>Gateways</h4>\n    <div *ngIf=\"gateways.length > 0\" >\n\n      <p>Deployed gateways</p>\n      <div class=\"row\">\n\n\n        <div *ngFor=\"let gw of gateways\" class=\"col-xl-3 col-lg-6 col-sm-12 m-0\">\n\n          <div class=\"sensor-div mb-4\">\n            <div class=\"row m-3\">\n              <div class=\"col-12\">\n                <h3>{{gw.name}}</h3>\n              </div>\n              <div class=\"col-12\">\n\n                <small>MAC:  </small>\n                <p class=\"sensor-spec\"><span *ngFor=\"let num of gw.mac; index as i\">{{num.toString(16)}}<span *ngIf=\"i<5\">:</span></span> </p>\n                <div *ngIf=\"gw.last_telemetry\">\n                  <small>Last telemetry: </small>\n                  <p class=\"sensor-spec\">{{gw.last_telemetry}}</p>\n                </div>\n\n                <div *ngIf=\"gw.wifi_credentials\">\n                  <small>Wifi SSID: </small>\n\n                  <p class=\"sensor-spec\">{{gw.wifi_credentials[0]}}</p>\n                </div>\n\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-senosr-map',\n  templateUrl: './senosr-map.component.html',\n  styleUrls: ['./senosr-map.component.css']\n})\nexport class SenosrMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>senosr-map works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deployment-statistics',\n  templateUrl: './deployment-statistics.component.html',\n  styleUrls: ['./deployment-statistics.component.css']\n})\nexport class DeploymentStatisticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>deployment-statistics works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Gateway } from '../models/gateway';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GatewayService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, ) { }\n\n\n\n  public getGateways(): Promise<Gateway[]>{\n    const url = `${this.apiUrl}/gateway`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Gateway[])\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneGateway(id: string): Promise<Gateway>{\n    const url = `${this.apiUrl}/gateway/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Gateway)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateGateway(id: string, body: any): Promise<any>{\n    const url = `${this.apiUrl}/gateway/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporoƒçilo || napaka.error.errmsg || napaka);\n  }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-explore-moments',\n  templateUrl: './explore-moments.component.html',\n  styleUrls: ['./explore-moments.component.css']\n})\nexport class ExploreMomentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>explore-moments works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Gateway } from \"../../models/gateway\";\nimport { GatewayService } from \"../../services/gateway.service\";\n\n@Component({\n  selector: 'app-gateways',\n  templateUrl: './gateways.component.html',\n  styleUrls: ['./gateways.component.css']\n})\nexport class GatewaysComponent implements OnInit {\n\n  constructor(\n    private gatewayService: GatewayService\n  ) { }\n\n  public gateways: Gateway[];\n\n  ngOnInit() {\n    console.log(\"hej\");\n    this.getGateways();\n  }\n\n  private getGateways(){\n    this.gatewayService.getGateways().then(result => {\n      console.log(result);\n      this.gateways = result;\n    });\n\n  }\n\n}\n","<h2 class=\"m-4 mt-5\">Gateways</h2>\n<div class=\"row mb-4 mx-1\">\n\n  <div class=\"col\">\n    <div *ngIf=\"gateways && gateways.length == 0\">\n      <p>There are no gateways!</p>\n    </div>\n    <div *ngIf=\"gateways && gateways.length != 0\">\n    <div *ngFor=\"let gateway of gateways\">\n      <div class=\"gateway-div mb-4\">\n        <div class=\"row m-3\">\n          <div class=\"col-12\">\n            <h3>{{gateway.name}}</h3>\n          </div>\n          <div class=\"col-3\">\n            <small>MAC:  </small>\n            <p class=\"gateway-spec\"><span *ngFor=\"let num of gateway.mac; index as i\">{{num.toString(16)}}<span *ngIf=\"i<5\">:</span></span> </p>\n            <small>Location: </small>\n            <p class=\"gateway-spec\">{{gateway.current_location[0].toFixed(3)}}, {{gateway.current_location[1].toFixed(3) | uppercase}}</p>\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"gateway.current_deployment\">\n            <small>Deployment: </small>\n            <p class=\"gateway-spec\">{{gateway.current_deployment}}</p>\n            </div>\n          </div>\n          <div class=\"col-4\">\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { componentFactoryName } from \"@angular/compiler\";\nimport {HomeComponent} from \"../app/components/home/home.component\";\nimport {DeploymentsComponent} from \"../app/components/deployments/deployments.component\";\nimport {SensorsComponent} from \"../app/components/sensors/sensors.component\";\nimport {GatewaysComponent} from \"../app/components/gateways/gateways.component\";\nimport {CreateDeploymentComponent} from \"./components/create-deployment/create-deployment.component\";\nimport {EditDeploymentComponent} from \"./components/edit-deployment/edit-deployment.component\";\nimport {ReviewDeploymentComponent} from \"./components/review-deployment/review-deployment.component\";\nimport {FinishedDeploymentComponent} from \"./components/finished-deployment/finished-deployment.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'deployments',\n        component: DeploymentsComponent\n      },\n      {\n        path: 'sensors',\n        component: SensorsComponent\n      },\n      {\n        path: 'gateways',\n        component: GatewaysComponent\n      },\n      {\n        path: 'createdeployment',\n        component: CreateDeploymentComponent\n      },\n      {\n        path: 'editdeployment/:id',\n        component: EditDeploymentComponent\n      },\n      {\n        path: 'reviewdeployment/:id',\n        component: ReviewDeploymentComponent\n      },\n      {\n        path: 'finisheddeployment/:id',\n        component: FinishedDeploymentComponent\n      }\n\n    ]\n  },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}