{"version":3,"sources":["./src/app/components/finished-deployment/finished-deployment.component.ts","./src/app/components/finished-deployment/finished-deployment.component.html","./src/app/services/sensor.service.ts","./src/app/models/data-deployment.ts","./src/app/components/edit-deployment/edit-deployment.component.ts","./src/app/components/edit-deployment/edit-deployment.component.html","./src/app/components/delete-deployment/delete-deployment.component.ts","./src/app/components/delete-deployment/delete-deployment.component.html","./src/app/components/create-deployment/create-deployment.component.ts","./src/app/components/create-deployment/create-deployment.component.html","./src/app/components/review-deployment/review-deployment.component.ts","./src/app/components/review-deployment/review-deployment.component.html","./src/app/components/sensors/sensors.component.ts","./src/app/components/sensors/sensors.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/average-chart/average-chart.component.ts","./src/app/components/average-chart/average-chart.component.html","./src/app/components/deployment-sensor/deployment-sensor.component.ts","./src/app/components/deployment-sensor/deployment-sensor.component.html","./src/app/services/data.service.ts","./src/app/services/deployment.service.ts","./src/app/components/deployment-overview/deployment-overview.component.ts","./src/app/components/deployment-overview/deployment-overview.component.html","./src/app/components/deployments/deployments.component.ts","./src/app/components/deployments/deployments.component.html","./src/app/components/sensor-map/sensor-map.component.ts","./src/app/components/sensor-map/sensor-map.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/deployment-data/deployment-data.component.ts","./src/app/components/deployment-data/deployment-data.component.html","./src/app/app.module.ts","./src/app/components/deployment-gateway/deployment-gateway.component.ts","./src/app/components/deployment-gateway/deployment-gateway.component.html","./src/app/components/senosr-map/senosr-map.component.ts","./src/app/components/senosr-map/senosr-map.component.html","./src/app/components/deployment-statistics/deployment-statistics.component.ts","./src/app/components/deployment-statistics/deployment-statistics.component.html","./src/app/services/gateway.service.ts","./src/app/components/explore-moments/explore-moments.component.ts","./src/app/components/explore-moments/explore-moments.component.html","./src/app/components/gateways/gateways.component.ts","./src/app/components/gateways/gateways.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-finished-deployment',\n  templateUrl: './finished-deployment.component.html',\n  styleUrls: ['./finished-deployment.component.css']\n})\nexport class FinishedDeploymentComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute) { }\n\n  public deployment: Deployment;\n  public id:string;\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    this.getDeployment();\n  }\n\n  private getDeployment(){\n    this.deploymentService.getOneDeployment(this.id).then((res) => {\n      this.deployment = res;\n      console.log(res);\n\n    });\n  }\n\n}\n","\n\n\n<div class=\"m-2\">\n<div class=\"deployment-div m-3\">\n\n<div *ngIf=\"deployment\">\n  <h2 class=\"mt-5 ml-5 mb-3\">{{deployment.name}}</h2>\n  <p class=\"ml-5 mb-5\">{{deployment.description}}</p>\n  <small class=\"ml-5 mb-5\">Number of measurements:</small>\n  <p class=\"ml-5 mb-5\">{{deployment.measurement_num}}</p>\n</div>\n\n\n<div *ngIf=\"deployment\" class=\"m-3\">\n<app-sensor-map [deployment]=\"deployment\" [id]=\"id\"></app-sensor-map>\n</div>\n\n\n\n<div class=\"row\">\n  <div class=\"col-12\">\n\n    <div class=\"deployment-div m-3 pr-5\">\n      <app-average-chart [id]=\"id\"></app-average-chart>\n    </div>\n\n  </div>\n\n</div>\n\n\n\n\n\n\n<app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Sensor } from '../models/sensor';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SensorService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, ) { }\n\n  public getSensors(): Promise<Sensor[]>{\n    console.log(this.apiUrl);\n    const url = `${this.apiUrl}/sensor`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Sensor[])\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneSensor(id: string): Promise<Sensor>{\n    const url = `${this.apiUrl}/sensor/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Sensor)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateSensor(id: string, body: string): Promise<Sensor[]>{\n    const url = `${this.apiUrl}/sensor/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Sensor[])\n      .catch(this.obdelajNapako);\n  }\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporočilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporočilo || napaka.error.errmsg || napaka);\n  }\n\n}\n","export class DataDeployment {\n    sensor_id: string;\n    location: number[];\n    delivered: boolean;\n    mac: number[];\n}\n","import {Component, OnInit, TemplateRef} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {Gateway} from \"../../models/gateway\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {DataDeployment} from \"../../models/data-deployment\";\n\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-edit-deployment',\n  templateUrl: './edit-deployment.component.html',\n  styleUrls: ['./edit-deployment.component.css']\n})\nexport class EditDeploymentComponent implements OnInit {\n\n\n  constructor(private modalService: BsModalService,\n              private activatedRoute: ActivatedRoute,\n              private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private router: Router) {\n  }\n\n  public errorMessages: string[];\n  public depDTO: Deployment;\n  public sensors: { sensor: Sensor, chosen: boolean, latitude: number, longitude: number, alpha: number }[];\n  public gateways: { gateway: Gateway, chosen: boolean,}[];\n  public deployment: Deployment;\n  public id: string;\n  modalRef: BsModalRef;\n\n  public wifis = {\"ssid\": \"\", \"password\": \"\"};\n\n  public wifiCredentials: { ssid: string, password: string}[];\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    console.log(this.id);\n    this.wifiCredentials = [];\n    this.getDeployment();\n    this.getSensors();\n    this.getGateways();\n  }\n\n  private getSensors() {\n    this.sensorService.getSensors().then(result => {\n      console.log(result);\n      let sorted =  result.sort((a, b) => this.getTime(b.last_telemetry) - this.getTime(a.last_telemetry));\n      console.log(result);\n      console.log(sorted);\n      this.sensors = [];\n      for (let sn of result) {\n        if (!sn.current_deployment || sn.current_deployment == '') {\n          this.sensors.push({sensor: sn, chosen: false, latitude: 0, longitude: 0, alpha: 0});\n        }\n      }\n      console.log(this.sensors);\n    });\n  }\n\n  private getTime(date?: Date) {\n    console.log( date != null ? date.valueOf() : 0);\n    return date != null ? date.valueOf() : 0;\n  }\n\n  openModal(not_ok: TemplateRef<any>, ok: TemplateRef<any>) {\n    this.errorMessages = [];\n\n    let gw_num = 0;\n    for(let gw of this.gateways){\n      if(gw.chosen == true){\n        gw_num++;\n      }\n    }\n    if(gw_num < 1){\n      this.errorMessages.push(\"You don't have any gateways selected!\");\n    }\n\n    let sn_num = 0;\n    for(let sn of this.sensors){\n      if(sn.chosen == true){\n        sn_num++;\n      }\n    }\n    if(sn_num < 1){\n      this.errorMessages.push(\"Place at least one sensor!\");\n    }\n\n    if(!this.deployment.name || this.deployment.name == ''){\n      this.errorMessages.push(\"Save the name of this deployment!\");\n    }\n\n    if(this.deployment.status != 'pending'){\n        this.errorMessages.push(\"Something went wrong with your deployment. Is it already deployed?\");\n    }\n\n    if(this.errorMessages.length != 0) {\n      this.modalRef = this.modalService.show(not_ok, {class: 'modal-sm'});\n    } else {\n\n      this.modalRef = this.modalService.show(ok, {class: 'modal-sm'});\n    }\n\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n  private getGateways() {\n    this.gateways = [];\n    this.gatewayService.getGateways().then(result => {\n      console.log(result);\n      this.gateways = [];\n      for (let gw of result) {\n        if (!gw.current_deployment || gw.current_deployment == '') {\n          this.gateways.push({gateway: gw, chosen: false});\n        }\n      }\n      console.log(this.sensors);\n    });\n  }\n\n\n  public deployDeployment(done: TemplateRef<any>, error: TemplateRef<any>){\n    this.errorMessages = [];\n    for(let sn of this.sensors){\n      if(sn.chosen == true){\n        let data_dep = new DataDeployment();\n        data_dep.location = [sn.latitude, sn.longitude];\n        data_dep.sensor_id = sn.sensor._id;\n        this.deployment.sensors.push(data_dep);\n      }\n    }\n\n    let jsn_wifi = {wifi_credentials: []};\n\n    jsn_wifi[\"wifi_credentials\"] = [this.wifis[\"ssid\"], this.wifis[\"password\"]];\n    console.log(JSON.stringify((jsn_wifi)));\n\n    for(let gw of this.gateways){\n      if(gw.chosen == true){\n        let data_dep = new DataDeployment();\n        data_dep.sensor_id = gw.gateway._id;\n        data_dep.location = [0, 0];\n        data_dep.mac = gw.gateway.mac;\n        this.deployment.gateways.push(data_dep);\n      }\n      this.gatewayService.updateGateway(gw.gateway._id, JSON.stringify(jsn_wifi));\n    }\n\n    this.deploymentService.updateDeployment(this.deployment._id, this.deployment).then(res => {\n      console.log(res);\n      this.getDeployment();\n\n      this.deploymentService.deployDeployment(this.deployment._id).then((data) =>{\n\n        console.log(data);\n        this.modalRef.hide();\n        this.navigateToReview(this.deployment._id);\n\n        //this.errorMessages.push(res.message);\n      });\n    });\n  }\n\n\n  public navigateToReview(id:string){\n    this.router.navigateByUrl(`reviewdeployment/${id}`);\n  }\n\n\n\n  public addGatewayToDeploy(id:string){\n    for(let gw of this.gateways){\n      if(gw.gateway._id == id){\n        gw.chosen = !gw.chosen;\n      }\n    }\n  }\n\n  public addWifiCredentials(){\n    this.wifiCredentials.push({ssid: \"\", password: \"\"});\n  }\n\n\n  private getDeployment() {\n    this.deploymentService.getOneDeployment(this.id).then(result => {\n      this.deployment = result;\n      this.depDTO = result;\n      console.log(this.deployment);\n      if(this.deployment.status == 'deployed'){\n        this.router.navigateByUrl(`reviewdeployment/${this.deployment._id}`);\n      }\n    })\n\n  }\n\n  public discardChanges() {\n    this.getDeployment();\n  }\n\n  public saveChangesForm() {\n    this.deploymentService.updateDeployment(this.deployment._id, this.depDTO).then(res => {\n      console.log(res);\n      this.getDeployment();\n    });\n\n  }\n\n\n  public addSensorToDeploy(id: string) {\n\n  }\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      if (sn.chosen) {\n        sn.alpha = 0.4;\n      }\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n\n  mapType = 'hybrid';\n  selectedMarker;\n  markers = [];\n\n  addMarker(lat: number, lng: number) {\n    for (let sn of this.sensors) {\n      if (sn.chosen == false) {\n        sn.chosen = true;\n        sn.longitude = lng;\n        sn.latitude = lat;\n        sn.alpha = 0.4;\n        return;\n      }\n    }\n    //this.markers.push({ lat, lng, alpha: 0.4 });\n  }\n\n  max(coordType: 'lat' | 'lng'): number {\n    return Math.max(...this.markers.map(marker => marker[coordType]));\n  }\n\n  min(coordType: 'lat' | 'lng'): number {\n    return Math.min(...this.markers.map(marker => marker[coordType]));\n  }\n\n  removeSensor(event) {\n    console.log(event);\n    for (let sn of this.sensors) {\n      if (sn.longitude == event.longitude && sn.latitude == event.latitude) {\n        sn.chosen = false;\n        sn.alpha = 0;\n        return;\n      }\n    }\n  }\n\n  selectMarker(event) {\n    console.log(event);\n    for (let sn of this.sensors) {\n      if (sn.longitude == event.longitude && sn.latitude == event.latitude && sn.chosen == true) {\n        sn.chosen = false;\n        sn.alpha = 0;\n        return;\n      }\n    }\n  }\n}\n","<div *ngIf=\"deployment\">\n  <h2 class=\"m-5\">{{deployment.name}}</h2>\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <form (submit)=\"saveChangesForm()\">\n        <div class=\"form-group\">\n          <label for=\"deploymentName\">Deployment name</label>\n          <input [(ngModel)]=\"depDTO.name\" name=\"name\" type=\"text\" class=\"form-control\" id=\"deploymentName\"\n                 placeholder=\"Enter deployment name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"deploymentDescription\">Deployment description</label>\n          <input [(ngModel)]=\"depDTO.description\" name=\"deploymentDescription\" type=\"textarea\" class=\"form-control\"\n                 id=\"deploymentDescription\" placeholder=\"Enter deployment description\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mr-4\">Save Changes</button>\n        <button (click)=\"discardChanges()\" class=\"btn btn-danger\">Discard Changes</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n<div class=\"deployment-div m-3\">\n  <div class=\"m-3\">\n    <h4>Sensors</h4>\n    <small>To place a sensor: <br>1. Click on the map to place a marker <br> 2. Click on the marker to remove it <br> 3.\n      Click on senor name to show its position</small>\n    <div class=\"m-3\">\n      <p>Free sensors</p>\n      <div class=\"row\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\" *ngIf=\"sn.chosen == false\">\n            <button type=\"button\" (click)=\"addSensorToDeploy(sn.sensor._id)\" class=\"btn btn-outline-dark\"\n                    disabled>{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"m-3\">\n      <p>Placed sensors</p>\n      <div class=\"row\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\" *ngIf=\"sn.chosen == true\">\n            <button type=\"button\" (click)=\"showLocation(sn.sensor._id)\"\n                    class=\"btn btn-outline-success\">{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <agm-map\n      [latitude]=\"46.04840798323542\"\n      [longitude]=\"14.506113341719598\"\n      [zoom]=\"13\"\n      (mapClick)=\"addMarker($event.coords.lat, $event.coords.lng)\"\n      [mapTypeId]='mapType'\n    >\n      <agm-marker\n        *ngFor=\"let sn of sensors\"\n        [latitude]=\"sn.latitude\"\n        [longitude]=\"sn.longitude\"\n        [opacity]=\"sn.alpha\"\n        [markerDraggable]=\"false\"\n        (markerClick)=\"removeSensor($event)\"\n      >\n      </agm-marker>\n    </agm-map>\n    <p *ngIf=\"selectedMarker\">\n      Lat: {{ selectedMarker.lat }} Lng: {{ selectedMarker.lng }}\n    </p>\n  </div>\n</div>\n\n\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <h4>Gateways</h4>\n      <small>Select the gateways by clicking on them. <br>Unselect the gateways in similar fashion. <br>Gateway location\n        is\n        not saved. Please remember it or write it down in deployment description. </small>\n      <div *ngIf=\"gateways.length > 0\">\n        <p>Free gateways</p>\n        <div class=\"row\">\n          <div *ngFor=\"let gw of gateways\">\n            <div class=\"col-1\" *ngIf=\"gw.chosen == false\">\n              <button type=\"button\" (click)=\"addGatewayToDeploy(gw.gateway._id)\"\n                      class=\"btn btn-outline-primary\">{{gw.gateway.name}}</button>\n            </div>\n          </div>\n        </div>\n\n\n        <p>Selected gateways</p>\n        <div class=\"row\">\n          <div *ngFor=\"let gw of gateways\">\n            <div class=\"col-1\" *ngIf=\"gw.chosen == true\">\n              <button type=\"button\" (click)=\"addGatewayToDeploy(gw.gateway._id)\"\n                      class=\"btn btn-outline-success\">{{gw.gateway.name}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <p>Gateway WiFi credentials</p>\n\n        <form (submit)=\"saveChangesForm()\">\n\n          <div class=\"form-group\">\n            <label for=\"ssid\">WiFi SSID</label>\n            <input [(ngModel)]=\"wifis.ssid\" name=\"name\" type=\"text\" class=\"form-control\" id=\"ssid\"\n                   placeholder=\"Enter WiFi SSID\">\n          </div>\n\n\n          <div class=\"form-group\">\n            <label for=\"deploymentDescription\">WiFi password</label>\n            <input [(ngModel)]=\"wifis.password\" name=\"deploymentDescription\" type=\"textarea\" class=\"form-control\"\n                   id=\"password\" placeholder=\"Enter WiFi password\">\n            </div>\n        </form>\n\n\n      <div *ngIf=\"gateways.length == 0\">\n        <p>No free gateways currently availale.</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"deployment-div m-3\">\n    <div class=\"m-3\">\n      <h4>NOTE: Once the deployment is deployed, it cannot be changed!!!</h4>\n      <button type=\"button\" (click)=\"openModal(not_ok, ok)\" class=\"btn btn-outline-danger\">DEPLOY</button>\n    </div>\n  </div>\n\n<app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n\n  <ng-template #not_ok>\n    <div class=\"modal-body text-center bg-custom\">\n      <div *ngFor=\"let err of errorMessages\">\n        <p>{{err}}</p>\n      </div>\n      <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n    </div>\n  </ng-template>\n\n  <ng-template #ok>\n    <div class=\"modal-body text-center bg-custom\">\n      <p>You are about to deploy this deployment.</p>\n      <button type=\"button\" class=\"btn btn-outline-primary m-1 \" (click)=\"deployDeployment(done, error)\">Deploy</button>\n      <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n    </div>\n  </ng-template>\n\n<ng-template #done>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Deployment was successfully deployed!</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n\n<ng-template #error>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Error</p>\n\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\nimport {Router} from \"@angular/router\";\nimport {Deployment} from \"../../models/deployment\";\n\n@Component({\n  selector: 'app-delete-deployment',\n  templateUrl: './delete-deployment.component.html',\n  styleUrls: ['./delete-deployment.component.css']\n})\nexport class DeleteDeploymentComponent implements OnInit {\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n\n  constructor(private deploymentService: DeploymentService,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  modalRef: BsModalRef;\n\n\n  public deleteDeployment(){\n    this.deploymentService.deleteDeployment(this.deployment._id).then(res =>{\n      this.decline();\n      console.log(res);\n      this.router.navigateByUrl(`deployments`);\n\n    });\n    this.decline();\n    this.router.navigateByUrl(`deployments`);\n  }\n\n\n  public decline(): void {\n    this.modalRef.hide();\n  }\n\n\n  public openModal(confirm: TemplateRef<any>) {\n\n    this.modalRef = this.modalService.show(confirm, {class: 'modal-sm'});\n\n  }\n\n}\n","\n<div class=\"deployment-div m-3\">\n  <div class=\"m-4\">\n    <h4>Delete deployment and all data</h4>\n    <button type=\"button\" (click)=\"openModal(deletion)\" class=\"btn btn-outline-danger m-2\">DELETE DEPLOYMENT</button>\n  </div>\n</div>\n\n<ng-template #deletion>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>You are about to delete this deployment.</p>\n    <button type=\"button\" class=\"btn btn-outline-primary m-1 \" (click)=\"deleteDeployment()\">DELETE</button>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-deployment',\n  templateUrl: './create-deployment.component.html',\n  styleUrls: ['./create-deployment.component.css']\n})\nexport class CreateDeploymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>create-deployment works!</p>\n","import {Component, OnInit, TemplateRef} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Deployment} from \"../../models/deployment\";\r\nimport {Sensor} from \"../../models/sensor\";\r\nimport {Gateway} from \"../../models/gateway\";\r\nimport {SensorService} from \"../../services/sensor.service\";\r\nimport {DeploymentService} from \"../../services/deployment.service\";\r\nimport {GatewayService} from \"../../services/gateway.service\";\r\n\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-review-deployment',\r\n  templateUrl: './review-deployment.component.html',\r\n  styleUrls: ['./review-deployment.component.css']\r\n})\r\nexport class ReviewDeploymentComponent implements OnInit {\r\n\r\n  constructor(private deploymentService: DeploymentService,\r\n              private sensorService: SensorService,\r\n              private gatewayService: GatewayService,\r\n              private activatedRoute: ActivatedRoute) { }\r\n\r\n\r\n  public deployment: Deployment;\r\n  public id:string;\r\n  modalRef: BsModalRef;\r\n\r\n  public openTab = \"overview\";\r\n\r\n\r\n  ngOnInit() {\r\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"id\");\r\n    this.getDeployment();\r\n  }\r\n\r\n  private getDeployment(){\r\n    this.deploymentService.getOneDeployment(this.id).then((res) => {\r\n      this.deployment = res;\r\n      console.log(res);\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public switchTab(name: string){\r\n    this.openTab = name;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"deployment\">\r\n  <h2 class=\"mt-5 ml-5 mb-3\">{{deployment.name}}</h2>\r\n  <p class=\"ml-5 mb-5\">{{deployment.description}}</p>\r\n\r\n  </div>\r\n<div class=\"m-3\">\r\n<ul class=\"nav nav-tabs\">\r\n\r\n  <div *ngIf=\"openTab != 'overview'\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" (click)=\"switchTab('overview')\">Overview</a>\r\n  </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'overview'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('overview')\">Overview</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'sensors'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('sensors')\">Sensors</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'sensors'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('sensors')\">Sensors</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'gateways'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('gateways')\">Gateways</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'gateways'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('gateways')\">Gateways</a>\r\n    </li>\r\n  </div>\r\n\r\n  <div *ngIf=\"openTab != 'data'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"switchTab('data')\">Data</a>\r\n    </li>\r\n  </div>\r\n  <div *ngIf=\"openTab == 'data'\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" (click)=\"switchTab('data')\">Data</a>\r\n    </li>\r\n  </div>\r\n\r\n</ul>\r\n</div>\r\n\r\n<div *ngIf=\"deployment\">\r\n<div *ngIf=\"openTab == 'sensors'\">\r\n  <app-deployment-sensor [deployment]=\"deployment\" [id]=\"id\"></app-deployment-sensor>\r\n</div>\r\n\r\n<div *ngIf=\"openTab == 'gateways'\">\r\n  <app-deployment-gateway [deployment]=\"deployment\" [id]=\"id\"></app-deployment-gateway>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"openTab == 'overview'\">\r\n  <app-deployment-overview [deployment]=\"deployment\" [id]=\"id\"></app-deployment-overview>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { SensorService } from \"../../services/sensor.service\";\nimport { Sensor} from \"../../models/sensor\";\n\n@Component({\n  selector: 'app-sensors',\n  templateUrl: './sensors.component.html',\n  styleUrls: ['./sensors.component.css']\n})\nexport class SensorsComponent implements OnInit {\n\n\n  constructor(\n    private sensorService: SensorService\n  ) { }\n\n  public sensors: Sensor[];\n\n  ngOnInit() {\n    this.getSensors();\n    console.log(\"hej\");\n    console.log(this.sensorService);\n  }\n\n  private getSensors(){\n    this.sensorService.getSensors().then(result => {\n      console.log(result);\n      this.sensors = result;\n    });\n\n  }\n\n\n\n}\n","<h2 class=\"m-5\">Sensors</h2>\n<div class=\"row mb-4\">\n\n  <div *ngFor=\"let sensori of sensors\" class=\"col-xl-6 col-lg-12 col-sm-12 m-0\">\n\n      <div class=\"sensor-div mb-4\">\n        <div class=\"row m-3\">\n          <div class=\"col-12\">\n            <h3>{{sensori.name}}</h3>\n          </div>\n          <div class=\"col-12\">\n            <div *ngIf=\"sensori.battery_voltage\">\n            <small>Battery voltage: </small>\n            <p class=\"sensor-spec\">{{sensori.battery_voltage | number : '.2-2'}} V</p>\n            </div>\n\n            <div *ngIf=\"sensori.firmware_version\">\n              <small>Firmware version: </small>\n              <p class=\"sensor-spec\">{{sensori.firmware_version}} V</p>\n            </div>\n\n            <div *ngIf=\"sensori.current_deployment\">\n            <small>Deployment: </small>\n            <p class=\"sensor-spec\">{{sensori.current_deployment}}</p>\n            <small>Location: </small>\n            <p class=\"sensor-spec\">{{sensori.current_location[0].toFixed(3)}}, {{sensori.current_location[1].toFixed(3)}}</p>\n            </div>\n          </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://urbannoisesensing.biolab.si/api\",\n  //apiUrl: \"http://localhost:3000/api\",\n  mapsKey: \"AIzaSyA9amYWGlkh7IzlVQIlZr4YIjHsWU1fHlA\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!---\r\n<div class=\"row mt-5\">\r\n  <div class=\"col-2\"></div>\r\n  <div class=\"col-8\">\r\n    <ul class=\"nav nav-pills nav-fill\">\r\n      <li class=\"nav-item\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/deployments\">Deployments</a>\r\n          </button>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/sensors\">Sensors</a>\r\n        </button>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary\">\r\n        <a routerLink=\"/gateways\">Gateways</a>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n\r\n  </div>\r\n</div>\r\n--->\r\n\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand ml-5\" href=\"#\">Urban Noise Sensing Platform</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/deployments\">Deployments</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/sensors\">Sensors</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/gateways\">Gateways</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12 col-xl-2 col-lg-1\"></div>\r\n  <div class=\"col-sm-12 col-xl-8 col-lg-10\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div class=\"col-sm-12 col-xl-2 col-lg-1\"></div>\r\n</div>\r\n","import {Component, HostListener, Input, OnInit} from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-average-chart',\n  templateUrl: './average-chart.component.html',\n  styleUrls: ['./average-chart.component.css']\n})\nexport class AverageChartComponent implements OnInit {\n\n  @Input() id: string;\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = '';\n  yAxisLabel: string = 'Average decibels';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n\n  average_data:[any];\n\n  constructor(private dataservice: DataService) { }\n\n  ngOnInit(): void {\n    this.getAverages();\n  }\n\n\n  private getAverages(){\n\n    this.dataservice.getAverageDeployment(this.id).then(data =>{\n      let temp_data = {};\n      temp_data[\"name\"] = \"averages\";\n      temp_data[\"series\"] = [];\n      let ticks = [];\n\n      for(let dd of data){\n        let one = {};\n        one[\"name\"] = (new Date(dd.time)).toLocaleTimeString();\n        one[\"value\"] = dd.average;\n        temp_data[\"series\"].push(one);\n\n      }\n\n      this.average_data = [temp_data];\n      console.log(this.average_data);\n    });\n  }\n\n  scrHeight:any;\n  scrWidth:any;\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.scrHeight = window.innerHeight;\n    this.scrWidth = window.innerWidth;\n    console.log(window);\n    console.log(this.scrHeight, this.scrWidth);\n  }\n\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12 py-5\">\n    <ngx-charts-line-chart\n      [scheme]=\"colorScheme\"\n\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxis]=\"xAxis\"\n      [yAxis]=\"yAxis\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [timeline]=\"timeline\"\n      [results]=\"average_data\"\n      [autoScale]=true\n      [gradient]=true\n      [maxXAxisTickLength]=100\n      (select)=\"onSelect($event)\"\n      (activate)=\"onActivate($event)\"\n      (deactivate)=\"onDeactivate($event)\"\n    >\n    </ngx-charts-line-chart>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\n\n@Component({\n  selector: 'app-deployment-sensor',\n  templateUrl: './deployment-sensor.component.html',\n  styleUrls: ['./deployment-sensor.component.css']\n})\nexport class DeploymentSensorComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  public mapType = \"hybrid\";\n  public longitude = 0;\n  public latitude = 0;\n  public sensors: {sensor: Sensor, alpha:number, measurements:number}[];\n\n  ngOnInit() {\n\n    this.getSensors();\n\n\n  }\n\n\n  private findnumber(id: String){\n    for(let sn of this.deployment.number_agregate){\n      if(sn.sensor == id){\n        return(sn.num);\n      }\n\n    }\n    return 0;\n\n  }\n\n  private getSensors(){\n    this.sensors = [];\n    for(let sen of this.deployment.sensors) {\n      this.sensorService.getOneSensor(sen.sensor_id).then((reses) => {\n        console.log(reses);\n        let res = reses[0];\n        this.sensors.push({sensor: res, alpha: 0.4, measurements: this.findnumber(sen.sensor_id)});\n        this.longitude += res.current_location[0] / this.deployment.sensors.length;\n        // @ts-ignore\n        this.latitude += res.current_location[1] / this.deployment.sensors.length;\n        console.log(res);\n      });\n    }\n    console.log(this.deployment);\n    console.log(this.sensors);\n    console.log(this.longitude);\n    console.log(this.latitude);\n  }\n\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      sn.alpha = 0.4;\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n\n\n}\n","<div class=\"deployment-div m-3\">\n  <div class=\"m-2\">\n\n\n    <div class=\"m-3\">\n      <h4>Sensors</h4>\n      <p>Placed sensors</p>\n\n      <div class=\"row mb-4\">\n\n        <div *ngFor=\"let sensori of sensors\" class=\"col-xl-3 col-lg-6 col-sm-12 m-0\">\n\n          <div class=\"sensor-div mb-4\">\n            <div class=\"row m-3\">\n              <div class=\"col-12\">\n                <h3>{{sensori.sensor.name}}</h3>\n              </div>\n              <div class=\"col-12\">\n\n                <div *ngIf=\"sensori.sensor.latest_measurement\">\n                  <small>Latest decibels: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.latest_measurement.decibels | number : '.2-2'}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.measurements\">\n                  <small>Number of measurements: </small>\n                  <p class=\"sensor-spec\">{{sensori.measurements}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.last_telemetry\">\n                  <small>Last telemetry: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.last_telemetry | date:'short'}}</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.battery_voltage\">\n                  <small>Battery voltage: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.battery_voltage | number : '.2-2'}} V</p>\n                </div>\n\n                <div *ngIf=\"sensori.sensor.firmware_version\">\n                  <small>Firmware version: </small>\n                  <p class=\"sensor-spec\">{{sensori.sensor.firmware_version}}</p>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div class=\"row\" *ngIf=\"sensors\">\n        <div *ngFor=\"let sn of sensors\">\n          <div class=\"col-1\">\n            <button type=\"button\" (click)=\"showLocation(sn.sensor._id)\"\n                    class=\"btn btn-outline-success\">{{sn.sensor.name}}</button>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"sensors\" class=\"my-3\">\n        <agm-map\n          [latitude]=\"longitude\"\n          [longitude]=\"latitude\"\n          [zoom]=\"15\"\n          [mapTypeId]='mapType'\n        >\n          <agm-marker\n            *ngFor=\"let sn of sensors\"\n            [latitude]=\"sn.sensor.current_location[0]\"\n            [longitude]=\"sn.sensor.current_location[1]\"\n            [opacity]=\"sn.alpha\"\n            [markerDraggable]=\"false\"\n          >\n          </agm-marker>\n        </agm-map>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Deployment } from '../models/deployment';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient,) { }\n\n\n  public getAverageDeployment(id:string): Promise<any>{\n    const url = `${this.apiUrl}/data/deployment/average/`+ id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n/*\n  public finishDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/finish/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneDeployment(id: string): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n  public deployDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/deploy/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateDeployment(id: string, body: any): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public createDeployment(body: any): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/`;\n    return this.http\n      .post(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n*/\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporočilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporočilo || napaka.error.errmsg || napaka);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Deployment } from '../models/deployment';\nimport {environment} from \"../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeploymentService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient,) { }\n\n\n  public getDeployments(): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public finishDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/finish/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneDeployment(id: string): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n  public deployDeployment(id: string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/deploy/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateDeployment(id: string, body: any): Promise<Deployment[]>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n  public createDeployment(body: any): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/`;\n    return this.http\n      .post(url, body)\n      .toPromise()\n      .then(answer => answer as Deployment[])\n      .catch(this.obdelajNapako);\n  }\n\n\n  public updateDeploymentInterval(id: string, interval:number): Promise<Deployment>{\n    const url = `${this.apiUrl}/deployment/interval/` + id + '/' + interval;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Deployment)\n      .catch(this.obdelajNapako);\n  }\n\n\n  public deleteDeployment(id:string): Promise<any>{\n    const url = `${this.apiUrl}/deployment/` + id;\n    return this.http\n      .delete(url)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporočilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporočilo || napaka.error.errmsg || napaka);\n  }\n}\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-deployment-overview',\n  templateUrl: './deployment-overview.component.html',\n  styleUrls: ['./deployment-overview.component.css']\n})\nexport class DeploymentOverviewComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  modalRef: BsModalRef;\n\n  public depDTO: Deployment;\n\n\n\n\n  ngOnInit() {\n    this.depDTO = this.deployment;\n    console.log(this.depDTO.measurement_interval);\n\n  }\n\n  public saveChangesForm(bad_interval: TemplateRef<any>, updated_interval: TemplateRef<any>) {\n    if(this.depDTO.measurement_interval < 1){\n      this.modalRef = this.modalService.show(bad_interval, {class: 'modal-sm'});\n    }else {\n      this.deploymentService.updateDeploymentInterval(this.id, this.depDTO.measurement_interval).then(res => {\n        console.log(res);\n        this.deployment = res;\n        this.modalRef = this.modalService.show(updated_interval, {class: 'modal-sm'});\n      });\n    }\n\n  }\n\n\n\n  public finishDeployment(){\n    this.deploymentService.finishDeployment(this.deployment._id).then((data) =>{\n      console.log(data);\n      this.modalRef.hide();\n      this.navigateBack();\n    });\n\n  }\n\n  public openModal(confirm: TemplateRef<any>) {\n\n    this.modalRef = this.modalService.show(confirm, {class: 'modal-sm'});\n\n  }\n\n  public decline(): void {\n    this.modalRef.hide();\n  }\n\n  public navigateBack(){\n    this.router.navigateByUrl(`deployments`);\n  }\n\n\n}\n","\n\n\n<div class=\"row\">\n  <div class=\"col-12\">\n\n    <div class=\"deployment-div m-3 pr-5\">\n      <app-average-chart [id]=\"id\"></app-average-chart>\n    </div>\n\n  </div>\n\n</div>\n\n\n<div class=\"deployment-div m-3\">\n  <div class=\"m-4\">\n    <h4>Sensing interval</h4>\n\n    <form (submit)=\"saveChangesForm(bad_interval, updated_interval)\">\n      <div class=\"form-group\">\n        <label for=\"measurementInterval\">Measurement interval</label>\n        <input [(ngModel)]=\"depDTO.measurement_interval\" name=\"measurement_interval\" type=\"number\" class=\"form-control\" id=\"measurementInterval\"\n               placeholder=\"Enter deployment name\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mr-4\">Save Changes</button>\n    </form>\n  </div>\n</div>\n\n<app-delete-deployment [deployment]=\"deployment\" [id]=\"id\"></app-delete-deployment>\n\n<div class=\"deployment-div m-3\">\n  <div class=\"m-4\">\n    <h4>NOTE: Once the deployment is ended, it cannot be redeployed back!!!</h4>\n    <button type=\"button\" (click)=\"openModal(confirm)\" class=\"btn btn-outline-danger m-2\">FINISH SENSING</button>\n  </div>\n</div>\n\n\n\n<ng-template #confirm>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>You are about to finish this deployment.</p>\n    <button type=\"button\" class=\"btn btn-outline-primary m-1 \" (click)=\"finishDeployment()\">Finish</button>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Not yet</button>\n  </div>\n</ng-template>\n\n\n\n<ng-template #bad_interval>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Sensing interval must be greater or equal to 1s.</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n\n<ng-template #updated_interval>\n  <div class=\"modal-body text-center bg-custom\">\n    <p>Sensing interval was updated.</p>\n    <button type=\"button\" class=\"btn btn-outline-dark m-1\" (click)=\"decline()\">Close</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Deployment } from \"../../models/deployment\";\nimport { DeploymentService } from \"../../services/deployment.service\";\nimport { DeploymentCreationDTO } from \"../../classes/deployment-creation-dto\"\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-deployments',\n  templateUrl: './deployments.component.html',\n  styleUrls: ['./deployments.component.css']\n})\nexport class DeploymentsComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService, private router: Router) { }\n\n  public deployments: Deployment[];\n  public creating = false;\n\n  public newdep: DeploymentCreationDTO = {name: ''};\n\n  ngOnInit() {\n    this.getDeployments();\n  }\n  private getDeployments(){\n    this.deploymentService.getDeployments().then(result => {\n      this.deployments = result;\n      console.log(result);\n    });\n\n  }\n\n  public switchCreating(){\n      this.creating = !this.creating;\n  }\n\n  public createDeployment(){\n    console.log(\"creating\");\n    console.log(this.newdep.name);\n    this.deploymentService.createDeployment(this.newdep).then(result => {\n      console.log(result);\n      this.newdep.name = '';\n      this.creating = false;\n      this.deployments.unshift(result);\n      this.navigateToEdit(result._id);\n    });\n\n  }\n\n  public navigateToEdit(id:string){\n    this.router.navigateByUrl(`editdeployment/${id}`);\n  }\n\n  public navigateToFinished(id:string){\n    this.router.navigateByUrl(`finisheddeployment/${id}`);\n  }\n\n  public navigateToReview(id:string){\n    this.router.navigateByUrl(`reviewdeployment/${id}`);\n  }\n\n}\n","<h2 class=\"ml-5 mt-5\">Deployments</h2>\r\n\r\n<div class=\"row ml-4\">\r\n\r\n  <div class=\"col\">\r\n    <div class=\"m-5\">\r\n      <div *ngIf=\"creating == false\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"switchCreating()\">+</button>\r\n      </div>\r\n      <div *ngIf=\"creating == true\">\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"switchCreating()\"> -</button>\r\n        <form (submit)=\"createDeployment()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"deploymentName\">Deployment name</label>\r\n            <input [(ngModel)]=\"newdep.name\" name=\"name\" type=\"text\" class=\"form-control\" id=\"deploymentName\"\r\n                   placeholder=\"Enter deployment name\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Create Deloyment</button>\r\n        </form>\r\n\r\n      </div>\r\n      <div *ngIf=\"deployments && deployments.length == 0\">\r\n        <p>There are no deployments yet!</p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <h3>Not yet deployed</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'pending'\">\r\n      <a (click)=\"navigateToEdit(deployment._id)\">\r\n        <div class=\"deployment-div mb-4\">\r\n          <div class=\"row m-3\">\r\n            <div class=\"col-8\">\r\n              <h4>{{deployment.name}}</h4>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <p>{{deployment.description}}</p>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Deployed</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'deployed'\">\r\n        <a (click)=\"navigateToReview(deployment._id)\">\r\n          <div class=\"deployment-div mb-4\">\r\n            <div class=\"row m-3\">\r\n              <div class=\"col-12\">\r\n                <h4>{{deployment.name}}</h4>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <p>{{deployment.description}}</p>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <small>Number of measurements:</small>\r\n                <p>{{deployment.measurement_num}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <h3>Finished</h3>\r\n    <div *ngFor=\"let deployment of deployments\">\r\n      <div *ngIf=\"deployment.status == 'finished'\">\r\n        <a (click)=\"navigateToFinished(deployment._id)\">\r\n          <div class=\"deployment-div mb-4\">\r\n            <div class=\"row m-3\">\r\n              <div class=\"col-12\">\r\n                <h4>{{deployment.name}}</h4>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <p>{{deployment.description}}</p>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                  <small>Number of measurements:</small>\r\n                  <p>{{deployment.measurement_num}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Deployment} from \"../../models/deployment\";\nimport {Sensor} from \"../../models/sensor\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\n\n@Component({\n  selector: 'app-sensor-map',\n  templateUrl: './sensor-map.component.html',\n  styleUrls: ['./sensor-map.component.css']\n})\nexport class SensorMapComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n  public mapType = \"hybrid\";\n  public longitude = 0;\n  public latitude = 0;\n  public sensors: {sensor: any, alpha:number}[];\n\n  ngOnInit() {\n    console.log(this.deployment);\n    this.getSensors();\n  }\n\n  private getSensors(){\n    this.sensors = [];\n    for(let sen of this.deployment.sensors) {\n\n        this.sensors.push({sensor: sen, alpha: 0.4});\n        this.longitude += sen.location[0] / this.deployment.sensors.length;\n        // @ts-ignore\n        this.latitude += sen.location[1] / this.deployment.sensors.length;\n        console.log(sen);\n      };\n\n    console.log(this.deployment);\n    console.log(this.sensors);\n    console.log(this.longitude);\n    console.log(this.latitude);\n  }\n\n\n  public showLocation(id: string) {\n    console.log(this.sensors);\n    for (let sn of this.sensors) {\n      sn.alpha = 0.4;\n      if (sn.sensor._id == id) {\n        sn.alpha = 1;\n      }\n    }\n  }\n}\n","<div *ngIf=\"sensors\" class=\"my-3\">\n  <agm-map\n    [latitude]=\"longitude\"\n    [longitude]=\"latitude\"\n    [zoom]=\"15\"\n    [mapTypeId]='mapType'\n  >\n    <agm-marker\n      *ngFor=\"let sn of sensors\"\n      [latitude]=\"sn.sensor.location[0]\"\n      [longitude]=\"sn.sensor.location[1]\"\n      [opacity]=\"sn.alpha\"\n      [markerDraggable]=\"false\"\n    >\n    </agm-marker>\n  </agm-map>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  title = 'UNSfrontend';\n}\n\n\n","\n<router-outlet></router-outlet>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deployment-data',\n  templateUrl: './deployment-data.component.html',\n  styleUrls: ['./deployment-data.component.css']\n})\nexport class DeploymentDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>deployment-data works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule , HttpHeaders } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SensorsComponent } from './components/sensors/sensors.component';\r\nimport { GatewaysComponent } from './components/gateways/gateways.component';\r\nimport { DeploymentsComponent } from './components/deployments/deployments.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CreateDeploymentComponent } from './components/create-deployment/create-deployment.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { EditDeploymentComponent } from './components/edit-deployment/edit-deployment.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport {environment} from \"../environments/environment\";\r\nimport { SensorMapComponent } from './components/sensor-map/sensor-map.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ReviewDeploymentComponent } from './components/review-deployment/review-deployment.component';\r\nimport { ExploreMomentsComponent } from './components/explore-moments/explore-moments.component';\r\nimport { DeploymentOverviewComponent } from './components/deployment-overview/deployment-overview.component';\r\nimport { DeploymentSensorComponent } from './components/deployment-sensor/deployment-sensor.component';\r\nimport { DeploymentGatewayComponent } from './components/deployment-gateway/deployment-gateway.component';\r\nimport { DeploymentDataComponent } from './components/deployment-data/deployment-data.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { AverageChartComponent } from './components/average-chart/average-chart.component';\nimport { DeleteDeploymentComponent } from './components/delete-deployment/delete-deployment.component';\nimport { FinishedDeploymentComponent } from './components/finished-deployment/finished-deployment.component';\nimport { DeploymentStatisticsComponent } from './components/deployment-statistics/deployment-statistics.component';\nimport { SenosrMapComponent } from './components/senosr-map/senosr-map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SensorsComponent,\r\n    GatewaysComponent,\r\n    DeploymentsComponent,\r\n    HomeComponent,\r\n    CreateDeploymentComponent,\r\n    EditDeploymentComponent,\r\n    SensorMapComponent,\r\n    ReviewDeploymentComponent,\r\n    ExploreMomentsComponent,\r\n    DeploymentOverviewComponent,\r\n    DeploymentSensorComponent,\r\n    DeploymentGatewayComponent,\r\n    DeploymentDataComponent,\r\n    AverageChartComponent,\r\n    DeleteDeploymentComponent,\r\n    FinishedDeploymentComponent,\r\n    DeploymentStatisticsComponent,\r\n    SenosrMapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxChartsModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule.forRoot(),\r\n    FormsModule,\r\n    AgmCoreModule.forRoot({apiKey: environment.mapsKey})\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Gateway} from \"../../models/gateway\";\nimport {DeploymentService} from \"../../services/deployment.service\";\nimport {SensorService} from \"../../services/sensor.service\";\nimport {GatewayService} from \"../../services/gateway.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {Deployment} from \"../../models/deployment\";\n\n@Component({\n  selector: 'app-deployment-gateway',\n  templateUrl: './deployment-gateway.component.html',\n  styleUrls: ['./deployment-gateway.component.css']\n})\nexport class DeploymentGatewayComponent implements OnInit {\n\n  constructor(private deploymentService: DeploymentService,\n              private sensorService: SensorService,\n              private gatewayService: GatewayService,\n              private activatedRoute: ActivatedRoute,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  @Input() id: string;\n  @Input() deployment: Deployment;\n\n  public gateways: Gateway[];\n\n  ngOnInit() {\n    this.getGateways()\n  }\n\n\n  private getGateways(){\n    this.gateways = [];\n    for(let gw of this.deployment.gateways){\n      this.gatewayService.getOneGateway(gw.sensor_id).then((res) => {\n        this.gateways.push(res);\n      });\n    }\n  }\n\n}\n","<div class=\"deployment-div m-3\" *ngIf=\"gateways\">\n  <div class=\"m-4\">\n    <h4>Gateways</h4>\n    <div *ngIf=\"gateways.length > 0\" >\n\n      <p>Deployed gateways</p>\n      <div class=\"row\">\n\n\n        <div *ngFor=\"let gw of gateways\" class=\"col-xl-3 col-lg-6 col-sm-12 m-0\">\n\n          <div class=\"sensor-div mb-4\">\n            <div class=\"row m-3\">\n              <div class=\"col-12\">\n                <h3>{{gw.name}}</h3>\n              </div>\n              <div class=\"col-12\">\n\n                <small>MAC:  </small>\n                <p class=\"sensor-spec\"><span *ngFor=\"let num of gw.mac; index as i\">{{num.toString(16)}}<span *ngIf=\"i<5\">:</span></span> </p>\n                <div *ngIf=\"gw.last_telemetry\">\n                  <small>Last telemetry: </small>\n                  <p class=\"sensor-spec\">{{gw.last_telemetry}}</p>\n                </div>\n\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-senosr-map',\n  templateUrl: './senosr-map.component.html',\n  styleUrls: ['./senosr-map.component.css']\n})\nexport class SenosrMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>senosr-map works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deployment-statistics',\n  templateUrl: './deployment-statistics.component.html',\n  styleUrls: ['./deployment-statistics.component.css']\n})\nexport class DeploymentStatisticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>deployment-statistics works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Gateway } from '../models/gateway';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GatewayService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, ) { }\n\n\n\n  public getGateways(): Promise<Gateway[]>{\n    const url = `${this.apiUrl}/gateway`;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Gateway[])\n      .catch(this.obdelajNapako);\n  }\n\n  public getOneGateway(id: string): Promise<Gateway>{\n    const url = `${this.apiUrl}/gateway/` + id;\n    return this.http\n      .get(url)\n      .toPromise()\n      .then(answer => answer as Gateway)\n      .catch(this.obdelajNapako);\n  }\n\n  public updateGateway(id: string, body: string): Promise<any>{\n    const url = `${this.apiUrl}/gateway/` + id;\n    return this.http\n      .put(url, body)\n      .toPromise()\n      .then(answer => answer as any)\n      .catch(this.obdelajNapako);\n  }\n\n\n  private obdelajNapako(napaka: any): Promise<any> {\n    console.error('Error ', napaka.error.sporočilo || napaka.error.errmsg || napaka);\n    return Promise.reject(napaka.error.sporočilo || napaka.error.errmsg || napaka);\n  }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-explore-moments',\n  templateUrl: './explore-moments.component.html',\n  styleUrls: ['./explore-moments.component.css']\n})\nexport class ExploreMomentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>explore-moments works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Gateway } from \"../../models/gateway\";\nimport { GatewayService } from \"../../services/gateway.service\";\n\n@Component({\n  selector: 'app-gateways',\n  templateUrl: './gateways.component.html',\n  styleUrls: ['./gateways.component.css']\n})\nexport class GatewaysComponent implements OnInit {\n\n  constructor(\n    private gatewayService: GatewayService\n  ) { }\n\n  public gateways: Gateway[];\n\n  ngOnInit() {\n    console.log(\"hej\");\n    this.getGateways();\n  }\n\n  private getGateways(){\n    this.gatewayService.getGateways().then(result => {\n      console.log(result);\n      this.gateways = result;\n    });\n\n  }\n\n}\n","<h2 class=\"m-5\">Gateways</h2>\n<div class=\"row mb-4\">\n\n  <div class=\"col\">\n    <div *ngIf=\"gateways && gateways.length == 0\">\n      <p>There are no gateways!</p>\n    </div>\n    <div *ngIf=\"gateways && gateways.length != 0\">\n    <div *ngFor=\"let gateway of gateways\">\n      <div class=\"gateway-div mb-4\">\n        <div class=\"row m-3\">\n          <div class=\"col-12\">\n            <h3>{{gateway.name}}</h3>\n          </div>\n          <div class=\"col-3\">\n            <small>MAC:  </small>\n            <p class=\"gateway-spec\"><span *ngFor=\"let num of gateway.mac; index as i\">{{num.toString(16)}}<span *ngIf=\"i<5\">:</span></span> </p>\n            <small>Location: </small>\n            <p class=\"gateway-spec\">{{gateway.current_location[0].toFixed(3)}}, {{gateway.current_location[1].toFixed(3) | uppercase}}</p>\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"gateway.current_deployment\">\n            <small>Deployment: </small>\n            <p class=\"gateway-spec\">{{gateway.current_deployment}}</p>\n            </div>\n          </div>\n          <div class=\"col-4\">\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { componentFactoryName } from \"@angular/compiler\";\nimport {HomeComponent} from \"../app/components/home/home.component\";\nimport {DeploymentsComponent} from \"../app/components/deployments/deployments.component\";\nimport {SensorsComponent} from \"../app/components/sensors/sensors.component\";\nimport {GatewaysComponent} from \"../app/components/gateways/gateways.component\";\nimport {CreateDeploymentComponent} from \"./components/create-deployment/create-deployment.component\";\nimport {EditDeploymentComponent} from \"./components/edit-deployment/edit-deployment.component\";\nimport {ReviewDeploymentComponent} from \"./components/review-deployment/review-deployment.component\";\nimport {FinishedDeploymentComponent} from \"./components/finished-deployment/finished-deployment.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'deployments',\n        component: DeploymentsComponent\n      },\n      {\n        path: 'sensors',\n        component: SensorsComponent\n      },\n      {\n        path: 'gateways',\n        component: GatewaysComponent\n      },\n      {\n        path: 'createdeployment',\n        component: CreateDeploymentComponent\n      },\n      {\n        path: 'editdeployment/:id',\n        component: EditDeploymentComponent\n      },\n      {\n        path: 'reviewdeployment/:id',\n        component: ReviewDeploymentComponent\n      },\n      {\n        path: 'finisheddeployment/:id',\n        component: FinishedDeploymentComponent\n      }\n\n    ]\n  },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}